// Generated by CoffeeScript 1.6.2
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var Home, Templates, Views, ajax, _ref;

    ajax = require('managers/ajax');
    Views = {
      Base: require('views/base'),
      List: require('views/facets/list'),
      Search: require('views/search')
    };
    Templates = {
      FacetedSearch: require('text!html/faceted-search.html')
    };
    return Home = (function(_super) {
      __extends(Home, _super);

      function Home() {
        _ref = Home.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      Home.prototype.className = 'faceted-search';

      Home.prototype.defaultOptions = function() {
        return {
          search: true
        };
      };

      Home.prototype.initialize = function(options) {
        Home.__super__.initialize.apply(this, arguments);
        this.options = _.extend(this.defaultOptions(), options);
        return this.render();
      };

      Home.prototype.render = function() {
        var rtpl, search;

        rtpl = _.template(Templates.FacetedSearch);
        this.$el.html(rtpl);
        if (this.options.search) {
          search = new Views.Search();
          this.$('form').html(search.$el);
        }
        this.fetchFacets();
        return this;
      };

      Home.prototype.fetchFacets = function() {
        var data, fetchResults, jqXHR,
          _this = this;

        fetchResults = function(key) {
          var jqXHR;

          jqXHR = ajax.get({
            url: "projects/32/search/" + key
          });
          return jqXHR.done(function(data) {
            _this.facets = data.facets;
            return _this.renderFacets();
          });
        };
        data = {
          term: '*',
          textLayers: ['Diplomatic']
        };
        jqXHR = ajax.post({
          url: "projects/32/search",
          contentType: 'application/json; charset=utf-8',
          processData: false,
          data: JSON.stringify(data)
        });
        jqXHR.done(function(data) {
          return fetchResults(data.key);
        });
        return jqXHR.fail(function(jqXHR, textStatus, errorThrown) {
          if (jqXHR.status === 401) {
            return _this.publish('unauthorized');
          }
        });
      };

      Home.prototype.renderFacets = function() {
        var data, index, list, _ref1, _results;

        _ref1 = this.facets;
        _results = [];
        for (index in _ref1) {
          if (!__hasProp.call(_ref1, index)) continue;
          data = _ref1[index];
          list = new Views.List({
            attrs: data
          });
          _results.push(this.$('form').append(list.$el));
        }
        return _results;
      };

      return Home;

    })(Views.Base);
  });

}).call(this);
